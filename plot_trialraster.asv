function [binedges,fhandle] = plot_trialraster(root,unit,sess,dbnsz,plotflag)
%% Plots the binned firing rate by velocity of a unit
%
% Inputs:
% root = root object. Must have root.tssync and root.tsb fields
% unit = cluster ID
% sess = session struct from importBhvr
% vbnsz = size of velocity bins, default 0.02m/s = 2cm/s
% plotflag = binary of whether to plot the output
%
% Outputs:
% binedges = velocity bin edges
% binfr = velocity-binned firing rate
% mdlparams = R and p values of the correlation coefficient, slope and
%   y-intercept of a linear model fit between velocity and firing rate
% fhandle = handle to figure
%
% Created 7/10/24 LKW; Grienberger Lab; Brandeis University
%--------------------------------------------------------------------------

arguments
    root            %struct containing neural info
    unit {double}   %Cluster ID
    sess            %session struct
    dbnsz = 0.03    %meters
    plotflag = 1    %binary
end

% Only use rewarded trials
sess.lapstt = sess.lapstt(sess.rewTrials);
sess.lapend = sess.lapend(sess.rewTrials);

binedges = 0:dbnsz:max(sess.pos);
spkinds    = root.tsb(root.cl == unit);

spkpos = [];
rwdpos = [];

for i = 1:length(sess.lapstt)
    tmpspks = sess.pos(find(spkinds > sess.lapstt(i) & spkinds < sess.lapend(i)));
    tmprwd  = sess.pos(find(sess.rwdind > sess.lapstt(i) & sess.rwdind < sess.lapend(i)));
    spkpos  = [spkpos; tmpspks, i*ones(length(tmpspks),1)];
    rwdpos  = [rwdpos; tmprwd, i];
end

% spkpos = sess.pos(root.tsb(root.cl == unit));

if p
fhandle = figure;      % Positional Lick Raster
hold on
set(gcf,'units','normalized','position',[0.4 0.35 0.3 0.5])
plot(spkpos(:,1)*100,spkpos(:,2),'k.')
plot(rwdmap(:,1)*100,rwdmap(:,2),'b|')
xlabel('Position (cm)')
ylabel('Trial #')
set(gca,'FontSize',12,'FontName','Arial')
title([strtok(session.name,'_'), ' ', session.name(end-9:end-8)])


end